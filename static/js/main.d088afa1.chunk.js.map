{"version":3,"sources":["components/title/title.jsx","constants.js","components/ToDoInput/ToDoInput.jsx","components/ToDoItem/ToDoItem.jsx","components/ToDoList/ToDoList.jsx","components/footer/footer.jsx","containers/todo/todo.jsx","actions/actionCreator.js","App.js","reducers/tasks.js","store.js","reducers/filters.js","reducers/index.js","index.js"],"names":["Title","title","className","defaultProps","ADD_TASK","REMOVE_TASK","COMPLETE_TASK","CHANGE_FILTER","ToDoInput","value","onChange","onKeyPress","onButtonClick","placeholder","onClick","ToDoItem","text","isCompleted","removeTask","completeTask","id","ToDoList","tasksList","map","FILTERS_BTN","Footer","amount","activeFilter","changeFilter","ToDo","state","taskText","handleInputChange","target","setState","addTask","key","length","props","Date","getTime","filterTasks","tasks","filter","task","getActiveTasksAmount","this","filters","isTasksExist","filteredTasks","tasksCounter","Component","connect","type","App","TASKS","load","namespace","preloadedState","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","save","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d088afa1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './title.css';\r\n\r\nconst Title = ({ title }) => (\r\n  <h1 className=\"title\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nTitle.defaultProps = {\r\n  title: 'Simple title',\r\n}\r\n\r\nexport default Title;","export const ADD_TASK = \"ADD_TASK\";\r\nexport const REMOVE_TASK = \"REMOVE_TASK\";\r\nexport const COMPLETE_TASK = \"COMPLETE_TASK\";\r\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ToDoInput.css';\r\n\r\nconst ToDoInput = ({ value, onChange, onKeyPress, onButtonClick }) => (\r\n  <div className=\"todo-input-wrapper\">\r\n    <input\r\n      className=\"todo-input\"\r\n      placeholder=\"Click to add task\"\r\n      onChange={onChange}\r\n      onKeyPress={onKeyPress}\r\n      value={value}\r\n    />\r\n    <button className=\"todo-button\" onClick={onButtonClick}>+</button>\r\n  </div>\r\n);\r\n\r\nToDoInput.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  onButtonClick: PropTypes.func,\r\n  value: PropTypes.string,\r\n}\r\n\r\nToDoInput.defaultProps = {\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  onButtonClick: () => {},\r\n  value: '',\r\n}\r\n\r\nexport default ToDoInput;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ToDoItem.css';\r\n\r\nconst ToDoItem = ({ text, isCompleted, removeTask, completeTask, id }) => (\r\n  <li className=\"todo-item\">\r\n    <i onClick={() => {completeTask(id)}} className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\r\n    <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\r\n    <i onClick={() => {removeTask(id)}} className=\"fas fa-times\" />\r\n  </li>\r\n);\r\n\r\nToDoItem.propTypes = {\r\n  text: PropTypes.string,\r\n  isCompleted: PropTypes.bool,\r\n  removeTask: PropTypes.func,\r\n  id: PropTypes.number,\r\n}\r\n\r\nToDoItem.defaultProps = {\r\n  text: '',\r\n  isCompleted: false,\r\n  removeTask: () => {},\r\n  id: 0,\r\n}\r\n\r\nexport default ToDoItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ToDoItem from '../ToDoItem/ToDoItem';\r\n\r\nimport './ToDoList.css';\r\n\r\nconst ToDoList = ({ tasksList, removeTask, completeTask }) => (\r\n  <ul className=\"todo-list\">\r\n    {tasksList.map(({ id, text, isCompleted }) => (\r\n      <ToDoItem completeTask={completeTask} removeTask={removeTask} id={id} key={id} text={text} isCompleted={isCompleted} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nToDoList.propTypes = {\r\n  tasksList: PropTypes.array,\r\n  removeTask: PropTypes.func,\r\n  completeTask: PropTypes.func,\r\n}\r\n\r\nToDoList.defaultProps = {\r\n  tasksList: [],\r\n  removeTask: () => {},\r\n  completeTask: () => {},\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './footer.css';\r\n\r\nconst FILTERS_BTN = [\r\n  {\r\n    text: 'All',\r\n    id: 'all',\r\n  },\r\n  {\r\n    text: 'Active',\r\n    id: 'active',\r\n  },\r\n  {\r\n    text: 'Completed',\r\n    id: 'completed'\r\n  }\r\n];\r\n\r\nconst Footer = ({ amount, activeFilter, changeFilter }) => (\r\n  <div className=\"footer\">\r\n    <span className=\"amount\">{`${amount} tasks left`}</span>\r\n    <div className=\"btn-group\">\r\n      {FILTERS_BTN.map(({ text, id }) => (\r\n        <button\r\n          key={id}\r\n          className={id === activeFilter ? \"filter-btn active\" : 'filter-btn'}\r\n          onClick={() => {changeFilter(id)}}\r\n        >{text}</button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nFooter.propTypes = {\r\n  amount: PropTypes.number,\r\n  activeFilter: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  amount: 0,\r\n  activeFilter: 'all',\r\n  changeFilter: () => {},\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTask, removeTask, completeTask, changeFilter } from '../../actions/actionCreator';\r\nimport ToDoInput from '../../components/ToDoInput/ToDoInput';\r\nimport ToDoList from '../../components/ToDoList/ToDoList';\r\nimport Footer from '../../components/footer/footer';\r\n\r\nimport './todo.css';\r\n\r\nclass ToDo extends Component {\r\n\r\n  state = {\r\n    taskText: ''\r\n  }\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    this.setState({\r\n      taskText: value,\r\n    })\r\n  }\r\n\r\n  addTask = ({ key, target }) => {\r\n    const { taskText } = this.state;\r\n\r\n    if (taskText.length > 2 && (key === \"Enter\" || target.className === \"todo-button\")) {\r\n      const { addTask } = this.props;\r\n\r\n      addTask(new Date().getTime(), taskText, false);\r\n    \r\n      this.setState({\r\n        taskText: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  filterTasks = (tasks, activeFilter) => {\r\n    switch (activeFilter) {\r\n      case 'completed':\r\n        return tasks.filter(task => task.isCompleted);\r\n        break;\r\n      case 'active':\r\n        return tasks.filter(task => !task.isCompleted);\r\n        break;\r\n      default:\r\n        return tasks;\r\n    }\r\n  }\r\n\r\n  getActiveTasksAmount = tasks => tasks.filter(task => !task.isCompleted).length;\r\n\r\n  render() {\r\n    const { taskText } = this.state;\r\n    const { tasks, removeTask, completeTask, filters, changeFilter } = this.props;\r\n    const isTasksExist = tasks && tasks.length > 0;\r\n    const filteredTasks = this.filterTasks(tasks, filters);\r\n    const tasksCounter = this.getActiveTasksAmount(tasks);\r\n\r\n    return (\r\n      <div className=\"todo-wrapper\">\r\n        <ToDoInput onKeyPress={this.addTask} onButtonClick={this.addTask} onChange={this.handleInputChange} value={taskText} />\r\n        {isTasksExist && <ToDoList tasksList={filteredTasks} removeTask={removeTask} completeTask={completeTask} />}\r\n        {isTasksExist && <Footer changeFilter={changeFilter} amount={tasksCounter} activeFilter={filters} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(({tasks, filters}) => ({\r\n  tasks,\r\n  filters,\r\n}), { addTask, removeTask, completeTask, changeFilter })(ToDo)","import {\r\n  ADD_TASK,\r\n  REMOVE_TASK,\r\n  COMPLETE_TASK,\r\n  CHANGE_FILTER,\r\n} from \"../constants\";\r\n\r\nexport const addTask = (id, text, isCompleted) => ({\r\n  type: ADD_TASK,\r\n  id,\r\n  text,\r\n  isCompleted,\r\n});\r\nexport const removeTask = (id) => ({\r\n  type: REMOVE_TASK,\r\n  id,\r\n});\r\nexport const completeTask = (id) => ({\r\n  type: COMPLETE_TASK,\r\n  id,\r\n});\r\nexport const changeFilter = (activeFilter) => ({\r\n  type: CHANGE_FILTER,\r\n  activeFilter,\r\n});\r\n","import React from \"react\";\r\nimport Title from \"./components/title/title\";\r\nimport ToDo from \"./containers/todo/todo\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Title title=\"ToDo App\" />\r\n    <ToDo />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK } from \"../constants\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nlet TASKS = load({ namespace: \"todo-list\" });\r\n\r\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\r\n  TASKS = {\r\n    tasks: [],\r\n  };\r\n}\r\n\r\n// const TASKS = [\r\n//   {\r\n//     id: 1,\r\n//     text: \"Learn ReactJS\",\r\n//     isCompleted: true,\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     text: \"Learn Redux\",\r\n//     isCompleted: false,\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     text: \"Learn React Router\",\r\n//     isCompleted: false,\r\n//   },\r\n// ];\r\n\r\nconst tasks = (state = TASKS.tasks, { id, text, isCompleted, type }) => {\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          id,\r\n          text,\r\n          isCompleted,\r\n        },\r\n      ];\r\n    case REMOVE_TASK:\r\n      return [...state].filter((task) => task.id !== id);\r\n    case COMPLETE_TASK:\r\n      return [...state].map((task) => {\r\n        if (task.id === id) {\r\n          task.isCompleted = !task.isCompleted;\r\n        }\r\n        return task;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default tasks;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport { save } from \"redux-localstorage-simple\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst configureStore = (preloadedState) =>\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(save({ namespace: \"todo-list\" })))\r\n  );\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import { CHANGE_FILTER } from \"../constants\";\r\n\r\nconst BASE_FILTER = \"all\";\r\n\r\nconst filter = (state = BASE_FILTER, { type, activeFilter }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return activeFilter;\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filter;\r\n","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport filters from \"./filters\";\r\n\r\nconst rootReducer = combineReducers({ tasks, filters });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}